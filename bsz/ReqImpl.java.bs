//package ff.jnezha.jnt.body;
//
//import ff.jnezha.jnt.Jnt;
//import ff.jnezha.jnt.utils.Closer;
//import ff.jnezha.jnt.utils.SSLConfig;
//import ff.jnezha.jnt.utils.TextUtils;
//
//import javax.net.ssl.HttpsURLConnection;
//import java.io.*;
//import java.net.HttpURLConnection;
//import java.net.Proxy;
//import java.net.URL;
//import java.util.Iterator;
//import java.util.Map;
//
///**
// * @Copyright © 2022 sanbo Inc. All rights reserved.
// * @Description: TODO
// * @Version: 1.0
// * @Create: 2022/1/4 1:03 PM
// * @author: sanbo
// */
//public class ReqImpl {
//
//
//
//    public static String request(String method, int timeout, String requestUrl, Proxy proxy, Map<String, String> reqHeaderMap, String data) {
//        HttpURLConnection conn = null;
//        try {
//            // 1. getConnection
//            conn = getConnection(method, timeout, requestUrl, proxy, reqHeaderMap, TextUtils.isEmpty(data) ? false : true);
//            conn.connect();
//            if (!TextUtils.isEmpty(data)) {
//                // 2. post data
//                postData(conn, data);
//            }
//            return listenStatusCodeAndProcess(conn, requestUrl);
//        } catch (Throwable e) {
//            e.printStackTrace();
//        }
//        return "";
//    }
//
//
//    /**
//     * 获取HttpURLConnection对象
//     *
//     * @param method
//     * @param timeout
//     * @param urlString
//     * @param proxy
//     * @param reqHeaderMap
//     * @param isHasData
//     * @return
//     */
//    private static HttpURLConnection getConnection(String method, int timeout, String urlString, Proxy proxy, Map<String, String> reqHeaderMap, boolean isHasData) {
//        HttpURLConnection conn = null;
//        try {
//            URL url = new URL(urlString);
//
//            if (urlString.startsWith("https")) {
//                if (proxy != null) {
//                    conn = (HttpsURLConnection) url.openConnection(proxy);
//                } else {
//                    conn = (HttpsURLConnection) url.openConnection();
//                }
//                ((HttpsURLConnection) conn).setHostnameVerifier(SSLConfig.NOT_VERYFY);
//                ((HttpsURLConnection) conn).setSSLSocketFactory(SSLConfig.getSSLFactory());
//            } else {
//                if (proxy != null) {
//                    conn = (HttpURLConnection) url.openConnection(proxy);
//                } else {
//                    conn = (HttpURLConnection) url.openConnection();
//                }
//            }
//            conn.setRequestMethod(method);
//            conn.setConnectTimeout(timeout);
//            conn.setReadTimeout(timeout);
//            if (isHasData) {
//                conn.setDoOutput(true);
//                conn.setDoInput(true);
//                conn.setUseCaches(false);
//            }
//
//            if (reqHeaderMap != null) {
//                Iterator<Map.Entry<String, String>> iterator = reqHeaderMap.entrySet().iterator();
//                while (iterator.hasNext()) {
//                    Map.Entry<String, String> entry = iterator.next();
//                    conn.addRequestProperty(entry.getKey(), entry.getValue());
//                }
//
//            }
//
//        } catch (Throwable e) {
//            e.printStackTrace();
//        }
//        return conn;
//    }
//
//    private static void postData(HttpURLConnection conn, String data) {
//        PrintWriter pw = null;
//        try {
//            pw = new PrintWriter(conn.getOutputStream());
//            pw.print(data);
//            pw.print("\r\n");
//            pw.flush();
//            pw.close();
//        } catch (Throwable e) {
//            e.printStackTrace();
//        } finally {
//            Closer.close(pw);
//        }
//    }
//
//
////    private static void postDataB(HttpURLConnection conn, String data) {
////        try {
////            DataOutputStream dos = new DataOutputStream(conn.getOutputStream());
////            dos.writeBytes(data);
//////        dos.write(data.getBytes(StandardCharsets.UTF_8));
////            dos.flush();
////            dos.close();
////        } catch (Throwable e) {
////            e.printStackTrace();
////        }
////    }
//
//    /**
//     * 处理网络请求返回值和状态
//     *
//     * @param conn
//     * @param url
//     * @return
//     */
//    private static String listenStatusCodeAndProcess(HttpURLConnection conn, String url) {
//        try {
//            int code = conn.getResponseCode();
//            System.out.println("Jnt(" + Jnt.VERSION + ") url:" + url + ",  response code:" + code + ", msg:" + conn.getResponseMessage());
//            if (code == 200 || code == 201) {
//                String result = parserResponseResult(conn.getInputStream());
//                if (Jnt.isDebug()) {
//                    System.out.println("Jnt(" + Jnt.VERSION + ") request sucess!  response:" + result);
//                }
//                if (!TextUtils.isEmpty(result)) {
//                    return result;
//                }
//            } else {
//                if (Jnt.isDebug()) {
//                    System.err.println("Jnt(" + Jnt.VERSION + ") request failed! response code: " + conn.getResponseCode() + " ,response msg: " + conn.getResponseMessage());
//                }
//                try {
//                    //try getResult
//                    String result = parserResponseResult(conn.getErrorStream());
//                    if (!TextUtils.isEmpty(result)) {
//                        return result;
//                    }
//                } catch (Throwable e) {
//                }
//            }
//
//        } catch (Throwable e) {
//            e.printStackTrace();
//        }
//        return "";
//    }
//
//    /**
//     * 解析网络请求的返回值
//     *
//     * @param is
//     * @return
//     */
//    private static String parserResponseResult(InputStream is) {
//        InputStreamReader isr = null;
//        BufferedReader reader = null;
//        try {
//            StringBuilder sbf = new StringBuilder();
//            isr = new InputStreamReader(is, "UTF-8");
//            reader = new BufferedReader(isr);
//            String strRead = null;
//            while ((strRead = reader.readLine()) != null) {
//                sbf.append(strRead);
//                sbf.append("\n");
//            }
//
//            return sbf.toString();
//        } catch (FileNotFoundException e) {
//            if (Jnt.isDebug()) {
//                e.printStackTrace();
//            }
//        } catch (Throwable e) {
//            e.printStackTrace();
//        } finally {
//            Closer.close(is, isr, reader);
//        }
//        return "";
//    }
//}
